---
# DSMR for ESPHome
#
# DSMR is a custom component that is in fact a DSMR (P1 Port) reader that runs
# fully within ESPHome.
#
# It allows you to expose data from your energy meter directly from ESPHome
# as sensors, or use them within ESPHome for further processing.
#
# https://github.com/zuidwijk/dsmr
#
# This component has been tested and used with DSMR reader boards created
# and sold by Marcel Zuidwijk, which I can highly recommend.
#
# Get yours at: https://www.zuidwijk.com
#
external_components:
  - source: github://zuidwijk/dsmr

esphome:
  esp8266_restore_from_flash: true
  on_boot:
    then:
      - if:
          condition:
            lambda: return id(has_key);
          then:
            - lambda: |-
                std::string key(id(stored_decryption_key), 32);
                id(dsmr_instance).set_decryption_key(key);
          else:
            - logger.log:
                level: info
                format: >-
                  Not using decryption key. If you need to set a key use
                  Home Assistant service 'ESPHome:  ${slug}_set_dsmr_key'

api:
  services:
    - service: set_dsmr_key
      variables:
        private_key: string
      then:
        - logger.log:
            format: Setting private key %s. Set to empty string to disable
            args: [private_key.c_str()]
        - globals.set:
            id: has_key
            value: !lambda "return private_key.length() == 32;"
        - lambda: |-
            if (private_key.length() == 32)
              private_key.copy(id(stored_decryption_key), 32);
            id(dsmr_instance).set_decryption_key(private_key);

globals:
  - id: has_key
    type: bool
    restore_value: true
    initial_value: "false"
  - id: stored_decryption_key
    type: char[32]
    restore_value: true

dsmr:
  id: dsmr_instance

sensor:
  - platform: dsmr
    energy_delivered_lux:
      id: dsmr_energy_delivered_lux
      name: "${name} Energy Consumed Luxembourg"
    energy_delivered_tariff1:
      id: dsrm_energy_delivered_tariff1
      name: "${name} Energy Consumed Tariff 1"
    energy_delivered_tariff2:
      id: dsmr_energy_delivered_tariff2
      name: "${name} Energy Consumed Tariff 2"
    energy_returned_lux:
      id: dsmr_energy_returned_lux
      name: "${name} Energy Produced Luxembourg"
    energy_returned_tariff1:
      id: dsmr_energy_returned_tariff1
      name: "${name} Energy Produced Tariff 1"
    energy_returned_tariff2:
      id: dsmr_energy_returned_tariff2
      name: "${name} Energy Produced Tariff 2"
    power_delivered:
      id: dsmr_power_delivered
      name: "${name} Power Consumed"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_returned:
      id: dsmr_power_returned
      name: "${name} Power Produced"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    electricity_failures:
      id: electricity_failures
      name: "${name} Electricity Failures"
      icon: mdi:alert
    electricity_long_failures:
      id: dsmr_electricity_long_failures
      name: "${name} Long Electricity Failures"
      icon: mdi:alert
    voltage_l1:
      id: dsmr_voltage_l1
      name: "${name} Voltage Phase 1"
    voltage_l2:
      id: dsmr_voltage_l2
      name: "${name} Voltage Phase 2"
    voltage_l3:
      id: dsmr_voltage_l3
      name: "${name} Voltage Phase 3"
    current_l1:
      id: dsmr_current_l1
      name: "${name} Current Phase 1"
    current_l2:
      id: dsmr_current_l2
      name: "${name} Current Phase 2"
    current_l3:
      id: dsmr_current_l3
      name: "${name} Current Phase 3"
    power_delivered_l1:
      id: dsmr_power_delivered_l1
      name: "${name} Power Consumed Phase 1"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_delivered_l2:
      id: dsmr_power_delivered_l2
      name: "${name} Power Consumed Phase 2"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_delivered_l3:
      id: dsmr_power_delivered_l3
      name: "${name} Power Consumed Phase 3"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_returned_l1:
      id: dsmr_power_returned_l1
      name: "${name} Power Produced Phase 1"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_returned_l2:
      id: dsmr_power_returned_l2
      name: "${name} Power Produced Phase 2"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_returned_l3:
      id: dsmr_power_returned_l3
      name: "${name} Power Produced Phase 3"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    gas_delivered:
      id: dsmr_gas_delivered
      name: "${name} Gas Consumed"
    gas_delivered_be:
      id: dsmr_gas_delivered_be
      name: "${name} Gas Consumed Belgium"

text_sensor:
  - platform: dsmr
    identification:
      id: dsmr_identification
      name: "${name} DSMR Identification"
    p1_version:
      id: dsmr_p1_version
      name: "${name} DSMR Version"
    p1_version_be:
      id: dsmr_p1_version_belgium
      name: "${name} DSMR Version Belgium"
